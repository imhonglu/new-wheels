/* This file is automatically generated. Do not edit this file. */
import { describe, expect, test } from "vitest";
import { Schema } from "../schema.js";
describe("minProperties validation", () => {
  const schema = {
    $schema: "https://json-schema.org/draft/2020-12/schema",
    minProperties: 1,
  };
  test("longer is valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ foo: 1, bar: 2 })).toBeTruthy();
  });
  test("exact length is valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ foo: 1 })).toBeTruthy();
  });
  test("too short is invalid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({})).toBeFalsy();
  });
  test("ignores arrays", () => {
    const instance = new Schema(schema);
    expect(instance.validate([])).toBeTruthy();
  });
  test("ignores strings", () => {
    const instance = new Schema(schema);
    expect(instance.validate("")).toBeTruthy();
  });
  test("ignores other non-objects", () => {
    const instance = new Schema(schema);
    expect(instance.validate(12)).toBeTruthy();
  });
});
describe("minProperties validation with a decimal", () => {
  const schema = {
    $schema: "https://json-schema.org/draft/2020-12/schema",
    minProperties: 1,
  };
  test("longer is valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ foo: 1, bar: 2 })).toBeTruthy();
  });
  test("too short is invalid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({})).toBeFalsy();
  });
});
