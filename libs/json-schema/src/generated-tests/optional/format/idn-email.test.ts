/* This file is automatically generated. Do not edit this file. */
import { describe, expect, test } from "vitest";
import { Schema } from "../../../schema.js";
describe("validation of an internationalized e-mail addresses", () => {
  const schema = {
    $schema: "https://json-schema.org/draft/2020-12/schema",
    format: "idn-email",
  };
  test("all string formats ignore integers", () => {
    const instance = new Schema(schema);
    expect(instance.validate(12)).toBeTruthy();
  });
  test("all string formats ignore floats", () => {
    const instance = new Schema(schema);
    expect(instance.validate(13.7)).toBeTruthy();
  });
  test("all string formats ignore objects", () => {
    const instance = new Schema(schema);
    expect(instance.validate({})).toBeTruthy();
  });
  test("all string formats ignore arrays", () => {
    const instance = new Schema(schema);
    expect(instance.validate([])).toBeTruthy();
  });
  test("all string formats ignore booleans", () => {
    const instance = new Schema(schema);
    expect(instance.validate(false)).toBeTruthy();
  });
  test("all string formats ignore nulls", () => {
    const instance = new Schema(schema);
    expect(instance.validate(null)).toBeTruthy();
  });
  test("a valid idn e-mail (example@example.test in Hangul)", () => {
    const instance = new Schema(schema);
    expect(
      instance.validate("\uC2E4\uB840@\uC2E4\uB840.\uD14C\uC2A4\uD2B8"),
    ).toBeTruthy();
  });
  test("an invalid idn e-mail address", () => {
    const instance = new Schema(schema);
    expect(instance.validate("2962")).toBeFalsy();
  });
  test("a valid e-mail address", () => {
    const instance = new Schema(schema);
    expect(instance.validate("joe.bloggs@example.com")).toBeTruthy();
  });
  test("an invalid e-mail address", () => {
    const instance = new Schema(schema);
    expect(instance.validate("2962")).toBeFalsy();
  });
});
