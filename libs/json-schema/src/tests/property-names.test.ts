/* This file is automatically generated. Do not edit this file. */
import { describe, expect, test } from "vitest";
import { Schema } from "../schema.js";
describe("propertyNames validation", () => {
  const schema = {
    $schema: "https://json-schema.org/draft/2020-12/schema",
    propertyNames: { maxLength: 3 },
  };
  test("all property names valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ f: {}, foo: {} })).toBeTruthy();
  });
  test("some property names invalid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ foo: {}, foobar: {} })).toBeFalsy();
  });
  test("object without properties is valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({})).toBeTruthy();
  });
  test("ignores arrays", () => {
    const instance = new Schema(schema);
    expect(instance.validate([1, 2, 3, 4])).toBeTruthy();
  });
  test("ignores strings", () => {
    const instance = new Schema(schema);
    expect(instance.validate("foobar")).toBeTruthy();
  });
  test("ignores other non-objects", () => {
    const instance = new Schema(schema);
    expect(instance.validate(12)).toBeTruthy();
  });
});
describe("propertyNames with boolean schema true", () => {
  const schema = {
    $schema: "https://json-schema.org/draft/2020-12/schema",
    propertyNames: true,
  };
  test("object with any properties is valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ foo: 1 })).toBeTruthy();
  });
  test("empty object is valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({})).toBeTruthy();
  });
});
describe("propertyNames with boolean schema false", () => {
  const schema = {
    $schema: "https://json-schema.org/draft/2020-12/schema",
    propertyNames: false,
  };
  test("object with any properties is invalid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ foo: 1 })).toBeFalsy();
  });
  test("empty object is valid", () => {
    const instance = new Schema(schema);
    expect(instance.validate({})).toBeTruthy();
  });
});
