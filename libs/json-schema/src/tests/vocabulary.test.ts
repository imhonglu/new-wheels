/* This file is automatically generated. Do not edit this file. */
import { describe, expect, test } from "vitest";
import { Schema } from "../schema.js";
describe("schema that uses custom metaschema with with no validation vocabulary", () => {
  const schema = {
    $id: "https://schema/using/no/validation",
    $schema: "http://localhost:1234/draft2020-12/metaschema-no-validation.json",
    properties: { badProperty: false, numberProperty: { minimum: 10 } },
  };
  test("applicator vocabulary still works", () => {
    const instance = new Schema(schema);
    expect(
      instance.validate({ badProperty: "this property should not exist" }),
    ).toBeFalsy();
  });
  test("no validation: valid number", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ numberProperty: 20 })).toBeTruthy();
  });
  test("no validation: invalid number, but it still validates", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ numberProperty: 1 })).toBeTruthy();
  });
});
describe("ignore unrecognized optional vocabulary", () => {
  const schema = {
    $schema:
      "http://localhost:1234/draft2020-12/metaschema-optional-vocabulary.json",
    type: "number",
  };
  test("string value", () => {
    const instance = new Schema(schema);
    expect(instance.validate("foobar")).toBeFalsy();
  });
  test("number value", () => {
    const instance = new Schema(schema);
    expect(instance.validate(20)).toBeTruthy();
  });
});
