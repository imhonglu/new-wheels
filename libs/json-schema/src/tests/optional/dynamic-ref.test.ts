/* This file is automatically generated. Do not edit this file. */
import { describe, expect, test } from "vitest";
import { Schema } from "../../schema.js";
describe("$dynamicRef skips over intermediate resources - pointer reference across resource boundary", () => {
  const schema = {
    $schema: "https://json-schema.org/draft/2020-12/schema",
    $id: "https://test.json-schema.org/dynamic-ref-skips-intermediate-resource/optional/main",
    type: "object",
    properties: { "bar-item": { $ref: "bar#/$defs/item" } },
    $defs: {
      bar: {
        $id: "bar",
        type: "array",
        items: { $ref: "item" },
        $defs: {
          item: {
            $id: "item",
            type: "object",
            properties: { content: { $dynamicRef: "#content" } },
            $defs: {
              defaultContent: { $dynamicAnchor: "content", type: "integer" },
            },
          },
          content: { $dynamicAnchor: "content", type: "string" },
        },
      },
    },
  };
  test("integer property passes", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ "bar-item": { content: 42 } })).toBeTruthy();
  });
  test("string property fails", () => {
    const instance = new Schema(schema);
    expect(instance.validate({ "bar-item": { content: "value" } })).toBeFalsy();
  });
});
